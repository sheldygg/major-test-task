services:
    notification:
        profiles: [ "exchange" ]
        container_name: example.notification
        hostname: example.notification
        build:
            context: .
        restart: unless-stopped
        depends_on:
            rabbit:
                condition: service_healthy
        networks:
            - example.grafana.network
            - example.rabbit.network
        volumes:
            - ./config:/app/config:ro
        environment:
            - CONFIG_PATH=$CONFIG_PATH
        command: [ "python", "-m", "exchange.notification_service.main" ]
    tg_bot:
        profiles:
            - "exchange"
        container_name: example.tg_bot
        hostname: example.tg_bot
        build:
            context: .
        restart: unless-stopped
        depends_on:
            rabbit:
                condition: service_healthy
        networks:
            - example.grafana.network
            - example.rabbit.network
        volumes:
            - ./config:/app/config:ro
        environment:
            - CONFIG_PATH=$CONFIG_PATH
        command: [ "python", "-m", "exchange.tg_bot.main" ]

    web:
        profiles:
            -  "exchange"
        container_name: example.web
        hostname: example.web
        build:
            context: .
        restart: unless-stopped
        depends_on:
            rabbit:
                condition: service_healthy
        networks:
            - example.grafana.network
            - example.rabbit.network
        volumes:
            -  ./config:/app/config:ro
        environment:
            - CONFIG_PATH=$CONFIG_PATH
        command: [ "python", "-m", "exchange.web.main" ]
        ports:
            - "127.0.0.1:8811:8080"

    rabbit:
        profiles: [ "exchange" ]
        build:
            dockerfile: DockerfileRabbit
        container_name: example.rabbit
        hostname: example.rabbit
        restart: unless-stopped
        expose:
            - "5672"
            - "15672"
        ports:
            - "127.0.0.1:5671:5671"
            - "127.0.0.1:5672:5672"
            - "127.0.0.1:15672:15672"
        networks:
            - example.rabbit.network
        volumes:
            - example.rabbit.data:/var/lib/rabbitmq/:rw
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-admin}
        healthcheck:
            test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running -q" ]
            interval: 10s
            timeout: 60s
            retries: 5
            start_period: 10s

    grafana:
        profiles: [ "grafana" ]
        image: grafana/grafana:latest
        container_name: example.grafana
        hostname: example.grafana
        restart: unless-stopped
        expose:
            - "3000"
        ports:
            - "127.0.0.1:3000:3000"
        networks:
            - example.grafana.network
        volumes:
            - example.grafana.data:/var/lib/grafana:rw
            - ./grafana/provisioning:/etc/grafana/provisioning:rw
            - ./grafana/dashboards:/etc/grafana/dashboards
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_DATABASE_WAL=true
            - VIRTUAL_HOST=example.grafana
            - NETWORK_ACCESS=internal
            - VIRTUAL_PORT=3000

    tempo:
        profiles: [ "grafana" ]
        image: grafana/tempo:latest
        container_name: example.tempo
        hostname: example.tempo
        command: [ "-config.file=/etc/tempo.yaml" ]
        volumes:
            - example.tempo.data:/var/tempo
            - ./tempo/tempo.yaml:/etc/tempo.yaml
        restart: unless-stopped
        ports:
            - "14250:14250"
            - "4317:4317"
            - "3200:3200"
        expose:
            - "14250"
            - "4317"
            - "3200"
        networks:
            - example.grafana.network

    prometheus:
        image: prom/prometheus:latest
        container_name: example.prometheus
        hostname: example.prometheus
        command:
            - --config.file=/etc/prometheus.yaml
            - --web.enable-remote-write-receiver
            - --enable-feature=exemplar-storage
        volumes:
            - ./prometheus/prometheus.yaml:/etc/prometheus.yaml
        ports:
            - "9090:9090"
        networks:
            - example.grafana.network

volumes:
    example.grafana.data: {}
    example.rabbit.data: {}
    example.tempo.data: {}


networks:
    example.grafana.network: {}
    example.rabbit.network: {}
